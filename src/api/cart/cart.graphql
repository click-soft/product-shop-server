scalar Date

type Query {
  cartItemsCount: Int!
  getCart: Cart
  getCartWithProduct: Cart
}

type Mutation {
  addToCart(item: CartItemDto): CartResult!
  updateCartItemQuantity(input: UpdateCartItemInput!): UpdateResult!
  deleteCartItem(id: Int!): DeleteResult!
  deleteCartItems(ids: [Int!]!): DeleteResult!
}

type Cart {
  id: Int!
  ykiho: String!
  cartItems: [CartItem]
}

type CartResult {
  message: String!
}

input UpdateCartItemInput {
  id: Int!
  quantity: Int!
}

input CartItemDto {
  id: Int
  cartId: Int
  code: String!
  quantity: Int!
  fit: Boolean!
  createdDate: Date
  updatedDate: Date
}

type CartItem {
  id: Int
  cartId: Int
  code: String!
  quantity: Int!
  fit: Boolean!
  createdDate: Date
  updatedDate: Date
  product: Product
}

type Product {
  auto: Int!
  jisa: String
  smCode: String
  smMyung: String
  smYmd: String
  danga: Int
  danwi: String
  etc1: String
  etc2: String
  etc3: String
  etc4: String
  etc5: String
}
